
@{
    ViewBag.Title = "Jsplumb";
}

<script src="//cdn.jsdelivr.net/npm/sortablejs@1.7.0/Sortable.min.js"></script>
<script src="~/Content/js/draggable.js"></script>
<script src="~/Content/js/svg.min.js"></script>
<script src="~/Content/js/jsplumb.js"></script>
<script src="~/Content/initData.js"></script>
<style>
    #FlowDesign, #FlowDesign > div {
        height: 90%;
        min-height: 650px;
    }

    .monitorObj {
        width: 100px;
        height: 60px;
        border: 1px solid #ccc;
        text-align: center;
        position: absolute;
        top: 0;
        left: 0;
    }

    #jsLayout {
        position: relative;
    }
</style>
<div id="FlowDesign" class="row">
    <h2 class="text-center">流程图设计界面</h2>
    <div class="col-sm-2">
        <div id="list" class="list-group">
            <a href="#" class="list-group-item" v-for="el in elements"
               v-bind:data-deviceType="el.deviceType"
               v-bind:data-type="el.type">
                <i :class="el.icon"></i> {{el.name}}
            </a>
        </div>
    </div>
    <div class="col-sm-8  table-bordered" id="jsLayout">
        <div class="dragPoint monitorObj" v-for="node in nodes" v-bind:id="node.id" :style="{left:node.left,top:node.top}">
            <div class="">
                <i :class="node.icon"></i> {{node.text}}
            </div>
        </div>
    </div>
    <div class="col-sm-2">

    </div>
</div>
<script>
    (function () {
        var a = new Vue({
            el: "#FlowDesign",
            data: {
                loggedEvent: "",
                elements: [
                    { "type": "Text", "name": "文本", "deviceType": "Text", "icon": "glyphicon glyphicon-text-size" },
                    { "type": "image", "name": "集中器", "deviceType": "concentrator", "icon": "glyphicon glyphicon-bed" },
                    { "type": "image", "name": "水表", "deviceType": "water", "icon": "glyphicon glyphicon-tint" },
                    { "type": "image", "name": "电表", "deviceType": "electric", "icon": "glyphicon glyphicon-flash" },
                    { "type": "image", "name": "汽表", "deviceType": "gas", "icon": "glyphicon glyphicon-fire" },
                ],
                jspInstance: null,
                nodes: [{
                    id: "element_1",
                    left: "40%",
                    top: "40%",
                    text: "默认节点",
                    icon: "glyphicon glyphicon-text-size"
                }],
                container: document.getElementById("jsLayout")
            },
            mounted() {
                var _this = this; var layout = document.getElementById("jsLayout");
                initJsplumb();
                _this.jspInstance = window.instance;
                /*
                第一次加载设计界面
                */
                sortable(document.getElementById('list'), function (item, evt) {
                    var startPoint = _this.isInCanvas(evt, layout);
                    if (startPoint) {
                        _this._createElements(startPoint, item.dataset.deviceType)
                    }
                });
            },
            methods: {
                isInCanvas(evt, toElements) {//判断是否在相应的元素内
                    var startPoint;
                    if (toElements && evt && toElements.getBoundingClientRect()) {
                        ePosition = toElements.getBoundingClientRect();
                        if ((evt.clientX > ePosition.left && evt.clientX < ePosition.left + toElements.offsetWidth)
                            && (evt.clientY > ePosition.top && evt.clientY < ePosition.top + toElements.offsetHeight)) {
                            startPoint = { x: 0, y: 0 };
                            startPoint.x = (evt.clientX - ePosition.left).toFixed(2);
                            startPoint.y = (evt.clientY - ePosition.top).toFixed(2);
                        }
                    }
                    return startPoint;
                },
                _initJsPlumb() {

                },
                _createElements(startPoint, eleType) {
                    var _this = this;
                    var id = _this.nodes.length + 1;
                    var node = {
                        id: "element_" + id,
                        left: startPoint.x + "px",
                        top: startPoint.y + "px",
                        text: "节点" + id,
                        type: eleType,
                        icon: "glyphicon glyphicon-text-size"
                    }
                    _this.nodes.push(node);
                    console.log(node.id)

                     setTimeout(jsMethods._addElement(node.id),100);
                }
            }
        });
        console.log(a);
    })();



    //function initData(data) {
    //    var nodes = data.Nodes;
    //    var jumps = data.Jumps;
    //    //添加节点
    //    nodes.forEach(function (item, index, arr) {
    //        var $item = $('<div class="item" style="" id=""><span class="text"></span><span class="dragPoint"></span></div>')
    //        $item.attr({ 'id': item.Guid })
    //        $item.attr({ 'style': item.Style })
    //        $item.find('.text').text(item.Name.Chinese)
    //        $container.append($item)
    //    })
    //    //添加连线
    //    var windowsDrag = $('#container .item')
    //    renderConnect(windowsDrag);

    //    //------------更改样式-------------
    //    for (var i in jumps) {
    //        renderConnecter(jumps[i])
    //    }
    //}
    //function Data() {
    //    return {
    //        "nodes": [{
    //            "id": "start",
    //            "type": "start",
    //            "text": "Start",
    //            "left": 87,
    //            "top": 55,
    //            "w": 100,
    //            "h": 70
    //        },
    //        {
    //            "id": "question1",
    //            "type": "question",
    //            "text": "Do Something?",
    //            "left": 290,
    //            "top": 79,
    //            "w": 150,
    //            "h": 150
    //        },
    //        {
    //            "id": "decide",
    //            "type": "action",
    //            "text": "Make Decision",
    //            "left": 660,
    //            "top": 187,
    //            "w": 120,
    //            "h": 120
    //        },
    //        {
    //            "id": "something",
    //            "type": "output",
    //            "text": "Do Something",
    //            "left": 827,
    //            "top": 414,
    //            "w": 120,
    //            "h": 50
    //        },
    //        {
    //            "id": "question2",
    //            "type": "question",
    //            "text": "Do Nothing?",
    //            "left": 74,
    //            "top": 330,
    //            "w": 150,
    //            "h": 150
    //        },
    //        {
    //            "id": "nothing",
    //            "type": "output",
    //            "text": "Do Nothing",
    //            "left": 433,
    //            "top": 558,
    //            "w": 100,
    //            "h": 50
    //        }],
    //        "edges": [
    //            {
    //                "source": "start",
    //                "target": "question1",
    //                "data": {}
    //            },
    //            {
    //                "source": "question1",
    //                "target": "decide",
    //                "data": {
    //                    "label": "yes",
    //                    "type": "connection"
    //                }
    //            },
    //            {
    //                "source": "question1",
    //                "target": "question2",
    //                "data": {
    //                    "label": "no",
    //                    "type": "connection"
    //                }
    //            },
    //            {
    //                "source": "decide",
    //                "target": "nothing",
    //                "data": {
    //                    "label": "Can't Decide",
    //                    "type": "connection"
    //                }
    //            },
    //            {
    //                "source": "decide",
    //                "target": "something",
    //                "data": {
    //                    "label": "Decision Made",
    //                    "type": "connection"
    //                }
    //            },
    //            {
    //                "source": "question2",
    //                "target": "decide",
    //                "data": {
    //                    "label": "no",
    //                    "type": "connection"
    //                }
    //            },
    //            {
    //                "source": "question2",
    //                "target": "nothing",
    //                "data": {
    //                    "label": "yes",
    //                    "type": "connection"
    //                }
    //            }
    //        ],
    //        "ports": [],
    //        "groups": []
    //    }
    //}
</script>
